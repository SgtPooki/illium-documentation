"use strict";(self.webpackChunkillium_documentation=self.webpackChunkillium_documentation||[]).push([[7862],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),l=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(i.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(n),d=o,f=u["".concat(i,".").concat(d)]||u[d]||m[d]||a;return n?r.createElement(f,c(c({ref:t},p),{},{components:n})):r.createElement(f,c({ref:t},p))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,c=new Array(a);c[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[u]="string"==typeof e?e:o,c[1]=s;for(var l=2;l<a;l++)c[l]=n[l];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1981:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:6},c="Block Format",s={unversionedId:"protocol_spec/blocks",id:"protocol_spec/blocks",title:"Block Format",description:"",source:"@site/docs/protocol_spec/blocks.md",sourceDirName:"protocol_spec",slug:"/protocol_spec/blocks",permalink:"/docs/protocol_spec/blocks",draft:!1,editUrl:"https://github.com/project-illium/illium-documentation/docs/protocol_spec/blocks.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"specSidebar",previous:{title:"Transaction Format",permalink:"/docs/protocol_spec/transactions"},next:{title:"Block Relay",permalink:"/docs/protocol_spec/block_relay"}},i={},l=[],p={toc:l},u="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"block-format"},"Block Format"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"message BlockHeader {\n    uint32 version    = 1;\n    uint32 height     = 2;\n    bytes parent      = 3;\n    int64 timestamp   = 4;\n    bytes tx_root     = 5;\n    bytes producer_ID = 6;\n    bytes signature   = 7;\n}\n\nmessage Block {\n    BlockHeader header                = 1;\n    repeated Transaction transactions = 2;\n}\n\nmessage BlockTxs {\n    repeated Transaction transactions = 1;\n}\n\nmessage XThinnerBlock {\n    BlockHeader header                          = 1;\n    uint32 tx_count                             = 2;\n    bytes pops                                  = 3;\n    bytes pushes                                = 4;\n    bytes push_bytes                            = 5;\n    repeated PrefilledTransaction prefilled_txs = 6;\n\n    message PrefilledTransaction {\n        Transaction transaction = 1;\n        uint32 index            = 2;\n    }\n}\n\nmessage CompressedBlock {\n    uint32 height             = 1;\n    repeated bytes nullifiers = 2;\n    repeated Output outputs   = 3;\n}\n")))}m.isMDXComponent=!0}}]);