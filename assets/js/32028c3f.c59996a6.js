"use strict";(self.webpackChunkillium_documentation=self.webpackChunkillium_documentation||[]).push([[4190],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>y});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),c=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),u=c(n),d=r,y=u["".concat(s,".").concat(d)]||u[d]||m[d]||i;return n?o.createElement(y,l(l({ref:t},p),{},{components:n})):o.createElement(y,l({ref:t},p))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=d;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a[u]="string"==typeof e?e:r,l[1]=a;for(var c=2;c<i;c++)l[c]=n[c];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7557:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var o=n(7462),r=(n(7294),n(3905));const i={sidebar_position:5},l="Policy Protocol",a={unversionedId:"protocol/policy",id:"protocol/policy",title:"Policy Protocol",description:"The policy protocol exposes an RPC protocol which allows network crawlers to query each node",source:"@site/docs/protocol/policy.md",sourceDirName:"protocol",slug:"/protocol/policy",permalink:"/protocol/policy",draft:!1,editUrl:"https://github.com/project-illium/illium-documentation/docs/protocol/policy.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"specSidebar",previous:{title:"Chain Service Protocol",permalink:"/protocol/chain-service"},next:{title:"Transaction Format",permalink:"/protocol/transactions"}},s={},c=[{value:"Protocol ID",id:"protocol-id",level:3},{value:"Network Messages",id:"network-messages",level:3}],p={toc:c},u="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"policy-protocol"},"Policy Protocol"),(0,r.kt)("p",null,"The policy protocol exposes an RPC protocol which allows network crawlers to query each node\nfor their current policy settings. This endpoint is rate limited as there isn't much of a need\nto query too frequently."),(0,r.kt)("h3",{id:"protocol-id"},"Protocol ID"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"/ilx/<network>/policy/1.0.0\n")),(0,r.kt)("p",null,"Where ",(0,r.kt)("inlineCode",{parentName:"p"},"<network>")," is either ",(0,r.kt)("inlineCode",{parentName:"p"},"mainnet"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"testnet"),", or ",(0,r.kt)("inlineCode",{parentName:"p"},"regtest")," depending on which\nnetwork is being used."),(0,r.kt)("h3",{id:"network-messages"},"Network Messages"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"message MsgPolicyRequest {\n    oneof msg {\n        GetFeePerKB get_fee_per_kb                     = 1;\n        GetMinStake get_min_stake                      = 2;\n        GetBlocksizeSoftLimit get_blocksize_soft_limit = 3;\n        GetTreasuryWhitelist get_treasury_whitelist    = 4;\n    }\n}\n\nmessage GetFeePerKB {}\n\nmessage MsgGetFeePerKBResp {\n    uint64 fee_per_kb = 1;\n}\n\nmessage GetMinStake {}\n\nmessage MsgGetMinStakeResp {\n    uint64 min_stake = 1;\n}\n\nmessage GetBlocksizeSoftLimit {}\n\nmessage MsgGetBlocksizeSoftLimitResp {\n    uint32 limit = 1;\n}\n\nmessage GetTreasuryWhitelist {}\n\nmessage MsgGetTreasuryWhitelistResp {\n    repeated bytes whitelist = 1;\n}\n")))}m.isMDXComponent=!0}}]);