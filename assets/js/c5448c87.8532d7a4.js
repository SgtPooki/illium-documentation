"use strict";(self.webpackChunkillium_documentation=self.webpackChunkillium_documentation||[]).push([[5101],{3905:(e,t,o)=>{o.d(t,{Zo:()=>p,kt:()=>y});var n=o(7294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function i(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function s(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?i(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function c(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)o=i[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)o=i[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var l=n.createContext({}),a=function(e){var t=n.useContext(l),o=t;return e&&(o="function"==typeof e?e(t):s(s({},t),e)),o},p=function(e){var t=a(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=a(o),d=r,y=u["".concat(l,".").concat(d)]||u[d]||m[d]||i;return o?n.createElement(y,s(s({ref:t},p),{},{components:o})):n.createElement(y,s({ref:t},p))}));function y(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=o.length,s=new Array(i);s[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[u]="string"==typeof e?e:r,s[1]=c;for(var a=2;a<i;a++)s[a]=o[a];return n.createElement.apply(null,s)}return n.createElement.apply(null,o)}d.displayName="MDXCreateElement"},6356:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>c,toc:()=>a});var n=o(7462),r=(o(7294),o(3905));const i={sidebar_position:5},s="Policy Protocol",c={unversionedId:"protocol_spec/policy",id:"protocol_spec/policy",title:"Policy Protocol",description:"The policy protocol exposes an RPC protocol which allows network crawlers to query each node",source:"@site/docs/protocol_spec/policy.md",sourceDirName:"protocol_spec",slug:"/protocol_spec/policy",permalink:"/docs/protocol_spec/policy",draft:!1,editUrl:"https://github.com/project-illium/illium-documentation/docs/protocol_spec/policy.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"specSidebar",previous:{title:"Chain Service Protocol",permalink:"/docs/protocol_spec/chain_service"},next:{title:"Transaction Format",permalink:"/docs/protocol_spec/transactions"}},l={},a=[{value:"Protocol ID",id:"protocol-id",level:3},{value:"Network Messages",id:"network-messages",level:3}],p={toc:a},u="wrapper";function m(e){let{components:t,...o}=e;return(0,r.kt)(u,(0,n.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"policy-protocol"},"Policy Protocol"),(0,r.kt)("p",null,"The policy protocol exposes an RPC protocol which allows network crawlers to query each node\nfor their current policy settings. This endpoint is rate limited as there isn't much of a need\nto query too frequently."),(0,r.kt)("h3",{id:"protocol-id"},"Protocol ID"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"/ilx/<network>/policy/1.0.0\n")),(0,r.kt)("p",null,"Where ",(0,r.kt)("inlineCode",{parentName:"p"},"<network>")," is either ",(0,r.kt)("inlineCode",{parentName:"p"},"mainnet"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"testnet"),", or ",(0,r.kt)("inlineCode",{parentName:"p"},"regtest")," depending on which\nnetwork is being used."),(0,r.kt)("h3",{id:"network-messages"},"Network Messages"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"message MsgPolicyRequest {\n    oneof msg {\n        GetFeePerKB get_fee_per_kb                     = 1;\n        GetMinStake get_min_stake                      = 2;\n        GetBlocksizeSoftLimit get_blocksize_soft_limit = 3;\n        GetTreasuryWhitelist get_treasury_whitelist    = 4;\n    }\n}\n\nmessage GetFeePerKB {}\n\nmessage MsgGetFeePerKBResp {\n    uint64 fee_per_kb = 1;\n}\n\nmessage GetMinStake {}\n\nmessage MsgGetMinStakeResp {\n    uint64 min_stake = 1;\n}\n\nmessage GetBlocksizeSoftLimit {}\n\nmessage MsgGetBlocksizeSoftLimitResp {\n    uint32 limit = 1;\n}\n\nmessage GetTreasuryWhitelist {}\n\nmessage MsgGetTreasuryWhitelistResp {\n    repeated bytes whitelist = 1;\n}\n")))}m.isMDXComponent=!0}}]);