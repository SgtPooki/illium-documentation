"use strict";(self.webpackChunkillium_documentation=self.webpackChunkillium_documentation||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Protocol Overview","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/illium-documentation/docs/overview/Protocol Overview/introduction","docId":"overview/Protocol Overview/introduction"},{"type":"link","label":"zk-snarks","href":"/illium-documentation/docs/overview/Protocol Overview/zk-snarks","docId":"overview/Protocol Overview/zk-snarks"},{"type":"link","label":"Output Commitments","href":"/illium-documentation/docs/overview/Protocol Overview/output_commitments","docId":"overview/Protocol Overview/output_commitments"},{"type":"link","label":"Merkle Trees","href":"/illium-documentation/docs/overview/Protocol Overview/merkle_trees","docId":"overview/Protocol Overview/merkle_trees"},{"type":"link","label":"Lurk","href":"/illium-documentation/docs/overview/Protocol Overview/lurk","docId":"overview/Protocol Overview/lurk"},{"type":"link","label":"Transaction Validation","href":"/illium-documentation/docs/overview/Protocol Overview/transaction_validation","docId":"overview/Protocol Overview/transaction_validation"},{"type":"link","label":"Smart Contracts","href":"/illium-documentation/docs/overview/Protocol Overview/smart_contracts","docId":"overview/Protocol Overview/smart_contracts"},{"type":"link","label":"Assets","href":"/illium-documentation/docs/overview/Protocol Overview/assets","docId":"overview/Protocol Overview/assets"},{"type":"link","label":"Consensus Algorithm","href":"/illium-documentation/docs/overview/Protocol Overview/consensus","docId":"overview/Protocol Overview/consensus"},{"type":"link","label":"Chain Selection","href":"/illium-documentation/docs/overview/Protocol Overview/chain_selection","docId":"overview/Protocol Overview/chain_selection"}],"href":"/illium-documentation/docs/category/protocol-overview"}],"apiSidebar":[{"type":"link","label":"Overview","href":"/illium-documentation/docs/api/overview","docId":"api/overview"},{"type":"link","label":"Blockchain Service","href":"/illium-documentation/docs/api/blockchain_service","docId":"api/blockchain_service"},{"type":"link","label":"Node Service","href":"/illium-documentation/docs/api/node_service","docId":"api/node_service"},{"type":"link","label":"Wallet Service","href":"/illium-documentation/docs/api/wallet_service","docId":"api/wallet_service"},{"type":"link","label":"Data Messages","href":"/illium-documentation/docs/api/data_messages","docId":"api/data_messages"},{"type":"link","label":"Notifications","href":"/illium-documentation/docs/api/notifications","docId":"api/notifications"}],"nodeSidebar":[{"type":"link","label":"Running a node","href":"/illium-documentation/docs/node/running_a_node","docId":"node/running_a_node"},{"type":"link","label":"Config File","href":"/illium-documentation/docs/node/config_file","docId":"node/config_file"},{"type":"link","label":"Command Line Interface","href":"/illium-documentation/docs/node/cli","docId":"node/cli"},{"type":"link","label":"Become a validator","href":"/illium-documentation/docs/node/validator","docId":"node/validator"},{"type":"link","label":"Offline Wallet","href":"/illium-documentation/docs/node/offline_wallet","docId":"node/offline_wallet"}],"specSidebar":[{"type":"link","label":"Protocol Specification","href":"/illium-documentation/docs/protocol_spec/overview","docId":"protocol_spec/overview"},{"type":"link","label":"Libp2p","href":"/illium-documentation/docs/protocol_spec/libp2p","docId":"protocol_spec/libp2p"},{"type":"link","label":"Consensus Protocol","href":"/illium-documentation/docs/protocol_spec/consensus","docId":"protocol_spec/consensus"},{"type":"link","label":"Chain Service Protocol","href":"/illium-documentation/docs/protocol_spec/chain_service","docId":"protocol_spec/chain_service"},{"type":"link","label":"Transaction Format","href":"/illium-documentation/docs/protocol_spec/transactions","docId":"protocol_spec/transactions"},{"type":"link","label":"Block Format","href":"/illium-documentation/docs/protocol_spec/blocks","docId":"protocol_spec/blocks"},{"type":"link","label":"Block Relay","href":"/illium-documentation/docs/protocol_spec/block_relay","docId":"protocol_spec/block_relay"}]},"docs":{"api/blockchain_service":{"id":"api/blockchain_service","title":"Blockchain Service","description":"RPC Messages","sidebar":"apiSidebar"},"api/data_messages":{"id":"api/data_messages","title":"Data Messages","description":"","sidebar":"apiSidebar"},"api/node_service":{"id":"api/node_service","title":"Node Service","description":"RPC Messages","sidebar":"apiSidebar"},"api/notifications":{"id":"api/notifications","title":"Notifications","description":"","sidebar":"apiSidebar"},"api/overview":{"id":"api/overview","title":"Overview","description":"Illium API overview","sidebar":"apiSidebar"},"api/wallet_service":{"id":"api/wallet_service","title":"Wallet Service","description":"RPC Messages","sidebar":"apiSidebar"},"node/cli":{"id":"node/cli","title":"Command Line Interface","description":"ilxcli is a command line interface for controlling a running ilxd instance. It communicates with ilxd via the gRPC API.","sidebar":"nodeSidebar"},"node/config_file":{"id":"node/config_file","title":"Config File","description":"As an alternative to using the command line options flags when running ilxd, you can set the same options in a config file.","sidebar":"nodeSidebar"},"node/offline_wallet":{"id":"node/offline_wallet","title":"Offline Wallet","description":"A common method of securing cryptocurrency is to use offline storage. In this method one keeps their private keys on device","sidebar":"nodeSidebar"},"node/running_a_node":{"id":"node/running_a_node","title":"Running a node","description":"Running a node","sidebar":"nodeSidebar"},"node/validator":{"id":"node/validator","title":"Become a validator","description":"Illium validators validate and process transactions, create blocks, participate in the consensus process, and earn newly","sidebar":"nodeSidebar"},"overview/Protocol Overview/assets":{"id":"overview/Protocol Overview/assets","title":"Assets","description":"Illium has native support for fungible and non-fungible assets (or tokens). An asset transfer looks no","sidebar":"tutorialSidebar"},"overview/Protocol Overview/chain_selection":{"id":"overview/Protocol Overview/chain_selection","title":"Chain Selection","description":"One of the primary benefits of Proof-of-work is it creates an objective criteria that one can use to select the","sidebar":"tutorialSidebar"},"overview/Protocol Overview/consensus":{"id":"overview/Protocol Overview/consensus","title":"Consensus Algorithm","description":"Illium uses a variant of avalanche for its consensus algorithm. There are several major benefits of avalanche that","sidebar":"tutorialSidebar"},"overview/Protocol Overview/introduction":{"id":"overview/Protocol Overview/introduction","title":"Introduction","description":"Welcome to the illium protocol overview!","sidebar":"tutorialSidebar"},"overview/Protocol Overview/lurk":{"id":"overview/Protocol Overview/lurk","title":"Lurk","description":"In our previous discussion of zk-snarks we hand-waived over all the complexity. Historically, zk-snarks have been","sidebar":"tutorialSidebar"},"overview/Protocol Overview/merkle_trees":{"id":"overview/Protocol Overview/merkle_trees","title":"Merkle Trees","description":"Bitcoin block headers contain a field called the merkle root. The merkle root is a compact cryptographic representation of","sidebar":"tutorialSidebar"},"overview/Protocol Overview/output_commitments":{"id":"overview/Protocol Overview/output_commitments","title":"Output Commitments","description":"Bitcoin","sidebar":"tutorialSidebar"},"overview/Protocol Overview/smart_contracts":{"id":"overview/Protocol Overview/smart_contracts","title":"Smart Contracts","description":"Thus far we\'ve seen how we can create Bitcoin-like unlocking scripts, albeit with a more advanced turning complete","sidebar":"tutorialSidebar"},"overview/Protocol Overview/transaction_validation":{"id":"overview/Protocol Overview/transaction_validation","title":"Transaction Validation","description":"We\'re now in a position to put it all together.","sidebar":"tutorialSidebar"},"overview/Protocol Overview/zk-snarks":{"id":"overview/Protocol Overview/zk-snarks","title":"zk-snarks","description":"Before we can dive into the Illium protocol we need to get our heads around zk-snarks. Don\'t worry, while the math","sidebar":"tutorialSidebar"},"protocol_spec/block_relay":{"id":"protocol_spec/block_relay","title":"Block Relay","description":"Illium uses a block compression protocol called Xthinner when relaying blocks to minimize network bandwidth usage.","sidebar":"specSidebar"},"protocol_spec/blocks":{"id":"protocol_spec/blocks","title":"Block Format","description":"","sidebar":"specSidebar"},"protocol_spec/chain_service":{"id":"protocol_spec/chain_service","title":"Chain Service Protocol","description":"The chain service protocol allows nodes to query each other for blocks and transactions.","sidebar":"specSidebar"},"protocol_spec/consensus":{"id":"protocol_spec/consensus","title":"Consensus Protocol","description":"The consensus protocol implements the avalanche consensus algorithm.","sidebar":"specSidebar"},"protocol_spec/libp2p":{"id":"protocol_spec/libp2p","title":"Libp2p","description":"Illium uses libp2p for its networking stack. This means that much of the illium protocol is defined by the underlying","sidebar":"specSidebar"},"protocol_spec/overview":{"id":"protocol_spec/overview","title":"Protocol Specification","description":"Illium protocol specification","sidebar":"specSidebar"},"protocol_spec/transactions":{"id":"protocol_spec/transactions","title":"Transaction Format","description":"","sidebar":"specSidebar"}}}')}}]);