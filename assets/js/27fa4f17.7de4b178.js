"use strict";(self.webpackChunkillium_documentation=self.webpackChunkillium_documentation||[]).push([[9063],{3905:(t,e,n)=>{n.d(e,{Zo:()=>u,kt:()=>b});var r=n(7294);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function s(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,r,o=function(t,e){if(null==t)return{};var n,r,o={},a=Object.keys(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var c=r.createContext({}),p=function(t){var e=r.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):s(s({},e),t)),n},u=function(t){var e=p(t.components);return r.createElement(c.Provider,{value:e},t.children)},l="mdxType",m={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},y=r.forwardRef((function(t,e){var n=t.components,o=t.mdxType,a=t.originalType,c=t.parentName,u=i(t,["components","mdxType","originalType","parentName"]),l=p(n),y=o,b=l["".concat(c,".").concat(y)]||l[y]||m[y]||a;return n?r.createElement(b,s(s({ref:e},u),{},{components:n})):r.createElement(b,s({ref:e},u))}));function b(t,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var a=n.length,s=new Array(a);s[0]=y;var i={};for(var c in e)hasOwnProperty.call(e,c)&&(i[c]=e[c]);i.originalType=t,i[l]="string"==typeof t?t:o,s[1]=i;for(var p=2;p<a;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},391:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:5},s="Transaction Format",i={unversionedId:"protocol_spec/transactions",id:"protocol_spec/transactions",title:"Transaction Format",description:"",source:"@site/docs/protocol_spec/transactions.md",sourceDirName:"protocol_spec",slug:"/protocol_spec/transactions",permalink:"/docs/protocol_spec/transactions",draft:!1,editUrl:"https://github.com/project-illium/illium-documentation/docs/protocol_spec/transactions.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"specSidebar",previous:{title:"Chain Service Protocol",permalink:"/docs/protocol_spec/chain_service"},next:{title:"Block Format",permalink:"/docs/protocol_spec/blocks"}},c={},p=[],u={toc:p},l="wrapper";function m(t){let{components:e,...n}=t;return(0,o.kt)(l,(0,r.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"transaction-format"},"Transaction Format"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"message Transaction {\n    oneof Tx {\n        StandardTransaction standard_transaction = 1;\n        CoinbaseTransaction coinbase_transaction = 2;\n        StakeTransaction    stake_transaction    = 3;\n        TreasuryTransaction treasury_transaction = 4;\n        MintTransaction     mint_transaction     = 5;\n    }\n}\n\nmessage Output {\n    bytes commitment       = 1;\n    bytes ciphertext       = 2;\n}\n\nmessage StandardTransaction {\n    repeated Output outputs =   1;\n    repeated bytes nullifiers = 2;\n    bytes txo_root            = 3;\n    int64 locktime            = 4;\n    uint64 fee                = 5;\n    bytes proof               = 6;\n}\n\nmessage CoinbaseTransaction {\n    bytes validator_ID       = 1;\n    uint64 new_coins         = 2;\n    repeated Output outputs  = 3;\n    bytes signature          = 4;\n    bytes proof              = 5;\n}\n\nmessage StakeTransaction {\n    bytes validator_ID = 1;\n    uint64 amount      = 2;\n    bytes nullifier    = 3;\n    bytes txo_root     = 4;\n    int64 locktime     = 5;\n    bytes signature    = 6;\n    bytes proof        = 7;\n}\n\nmessage TreasuryTransaction {\n    uint64 amount            = 1;\n    repeated Output outputs  = 2;\n    bytes proposal_hash      = 3;\n    bytes proof              = 4;\n}\n\nmessage MintTransaction {\n    AssetType type            = 1;\n    bytes asset_ID            = 2;\n    bytes document_hash       = 3;\n    uint64 new_tokens         = 4;\n    repeated Output outputs   = 5;\n    uint64 fee                = 6;\n    repeated bytes nullifiers = 7;\n    bytes txo_root            = 8;\n    bytes mint_key            = 9;\n    int64 locktime            = 10;\n    bytes signature           = 11;\n    bytes proof               = 12;\n\n    enum AssetType {\n        FIXED_SUPPLY    = 0;\n        VARIABLE_SUPPLY = 1;\n    }\n}\n")))}m.isMDXComponent=!0}}]);